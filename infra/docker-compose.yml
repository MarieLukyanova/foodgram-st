services:

  db:
    image: postgres:13
    container_name: foodgram-db
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  backend:
    container_name: foodgram-back
    build:
      context: ../backend
    env_file:
      - .env
    volumes:
      - ../backend/:/app/
      - ../data:/data
    command: >
      sh -c "python manage.py migrate &&
             python manage.py load_ingredients &&
             python manage.py collectstatic --noinput &&
             gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      - db
    expose:
      - "8000"

  frontend:
    container_name: foodgram-front
    build:
      context: ../frontend
    command: npm run build
    volumes:
      - ../frontend/build:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    environment:
      - SOMETHING=$y
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/

volumes:
  postgres_data: